8:45

1. n x n, < 100

2. empty 0, chem 1~9

3. chem is rect 

4. chawon is given

5. there is empty rect between rects

6. no overlap all rows and cols are different respectively

7. test case is grouped:

   1. n <=10, su matrix <= 5

   2. n <= 40 su matrix <= 10

   3. 40 < n <= 80 5 < su matrix <= 10

   4. 40 < n <= 80 10 < su matrix <= 15

   5. 80 < n <= 100 15 < su matrix <= 20

[input] 

test num

5
n x n

6
n x n


[output]

num_of_su matrix 2x3 3x4 4x5

8:55

어떻게 풀어야 하지?

- 여러 개의 사각형을 aware 해서 그 사각형의 리스트를 관리한다. 이 때, 행, 렬의 정보를 모두 담아야 한다.

- 이것도 받으면서 할 수 있다. 첫 번 째 줄에서는 특별히 count 하지 않고 표기만 T 로 한다

- 두 번째 줄에서도 count 는 일단 하지 말고 계속 T로만 표기한다

- 만약 왼쪽 공백이 생긴다면 또는 오른 쪽 공백이 생긴다면 그건 새로운 사각형이다.

- 그런데, 어느 순간에 끝났다는 것을 알아서 그걸 저장해야 하는데 이게 잘 모르겠다.

- 한 컬럼이 0 일 때, 만약 윗 컬럼이 0 이 아니면, 그건 있다는 것이고, 계속 0이 아닌 것을 세어서 몇 개 인지
  
  확인하고, depth 도 확인하면 대략 몇 개의 값이 나오는 지 알 수 있을 것 같다.

  . 일단 위에가 0이고, 옆에도 0이면 (또는 시작이면) 그건 서브 매트릭스의 시작이다.

  . 이 때 x,y 를 사각형 번호와 함께 둘수 있겠다. 만약 struct 나 작은 클래스를 만든다면, {startX, startY, endX, endY} 이렇게 네 개의 

    int 값으로 이루어진 가장 작은 클래스를 만들어도 되겠다. 이게 시간이 별로 안걸린다면..근데 이걸 struct 로 하는게 더 낫겠다.

    클래스로 하면 width, height 도 얻을 수 있으니 나을 수도 있다. 클래스로 하자. 


- 이 값을 각 각 result 에 넣어둔다.

- 그리고 나중에 갯 수를 세고, sort by row를 통해서 해서 순서 대로 찍으면 된다.

9:09 / 25분 

9:46 / 1:01 세부 알고리즘

10:00 세부 알고리즘

10:11 정신이 혼미하고 개구리가 뛴다. 별로 좋지 않다 1:25 분 경과

11:04 2:20 썼다

11:22 풀었다. 거의 2시간 40 분 걸렸다. 그 안에 희노애락을 다 했음. 푸훗




